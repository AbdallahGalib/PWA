const c="pwa-cache-v1",p="location-sync",w="periodic-geofence-check",h="GeofenceDB",i="locationUpdates",u=["/","/index.html","/favicon.ico","/manifest.json","/leaflet/marker-icon.png","/leaflet/marker-icon-2x.png","/leaflet/marker-shadow.png"];function r(){return new Promise((t,e)=>{if(!indexedDB){e(new Error("IndexedDB is not supported in this context"));return}const o=indexedDB.open(h,1);o.onerror=()=>e(o.error),o.onsuccess=()=>t(o.result),o.onupgradeneeded=a=>{const n=a.target.result;n.objectStoreNames.contains(i)||n.createObjectStore(i,{keyPath:"timestamp"})}})}async function g(t){try{await(await r()).transaction(i,"readwrite").objectStore(i).add({timestamp:new Date().getTime(),location:t})}catch(e){console.warn("Failed to store location update:",e)}}async function d(){const o=(await r()).transaction(i,"readwrite").objectStore(i),a=await o.getAll();for(const n of a)try{(await self.clients.matchAll()).forEach(f=>{f.postMessage({type:"location-update",location:n})}),n.isInsideGeofence&&await l("Geofence Alert",{body:`You are inside the geofence: ${n.geofenceName}`,icon:"/vite.svg",badge:"/vite.svg",data:{location:n}}),await o.delete(n.timestamp)}catch(s){console.error("Error processing location:",s)}}async function l(t,e){try{await Notification.requestPermission()==="granted"&&await self.registration.showNotification(t,e)}catch(o){console.error("Error showing notification:",o)}}self.addEventListener("install",t=>{t.waitUntil(caches.open(c).then(e=>e.addAll(u)))});self.addEventListener("activate",t=>{t.waitUntil(caches.keys().then(e=>Promise.all(e.map(o=>{if(o!==c)return caches.delete(o)}))))});self.addEventListener("fetch",t=>{t.respondWith(caches.match(t.request).then(e=>e||fetch(t.request)))});self.addEventListener("sync",t=>{t.tag===p&&t.waitUntil(d())});self.addEventListener("periodicsync",t=>{t.tag===w&&t.waitUntil(d())});self.addEventListener("push",t=>{if(!t.data)return;const e=t.data.json();t.waitUntil(l(e.title,{body:e.body,icon:"/vite.svg",badge:"/vite.svg",data:e}))});self.addEventListener("notificationclick",t=>{t.notification.close(),t.waitUntil(clients.openWindow("/"))});self.addEventListener("message",t=>{t.data.type==="store-location"&&t.waitUntil(g(t.data.location))});
